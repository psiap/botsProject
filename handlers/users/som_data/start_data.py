import datetime
import os
import random
import zipfile

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.types import InputFile
from telethon import TelegramClient

from keyboards.default import menu_start
from keyboards.default.start_menu import menu_start_data, menu_beck
from loader import dp, bot


@dp.message_handler(text='üíª –î–∞–Ω–Ω—ã–µ', state='*')
async def start(message: types.Message, state: FSMContext):

    __userid = message.from_user.id
    await message.answer(f"<b>üëë{message.from_user.first_name}üëë –í—ã –ø–µ—Ä–µ—à–µ–ª–∏ –≤ - üíª –î–∞–Ω–Ω—ã–µ</b>\n\n"
                         f"<b>‚ö™Ô∏èSession</b> - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ —Å –Ω–µ–≥–æ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å "
                         f"–ø–∞—Ä—Å–∏–Ω–≥ –∏ —Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ –≤–∞—à–∏–º –∫–∞–Ω–∞–ª–∞–º;\n\n"
                         f"<b>‚ö´Ô∏èProxy</b> - –ï—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å, —á—Ç–æ –±—ã –Ω–µ –∑–∞–±–∞–Ω–∏–ª–æ –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã;\n\n"
                         f"<b>üîµAccounts</b> - –ï—Å–ª–∏ –º—ã –Ω–µ –¥–æ–±–∞–≤–∏–º –∞–∫–∫–∞—É–Ω—Ç—ã, "
                         f"–º—ã –Ω–µ —Å–º–æ–∂–µ–º —Ä–∞—Å—Å—ã–ª–∞—Ç—å –∏ –∏–Ω–≤–∞–π—Ç–∏—Ç—å.\n\n"
                         f"<b>üü¢Create</b> - –°–æ–∑–¥–∞—Ç—å —Å–µ—Å—Å–∏—é", reply_markup=menu_start_data)

@dp.message_handler(text='üü¢Create', state='*')
async def start(message: types.Message, state: FSMContext):
    await message.answer(f"‚ö°Ô∏è–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ <code>79493158791</code> <b>(–ü–ª—é—Å–∏–∫–∏, –ø—Ä–æ–±–µ–ª—ã, —Å–∫–æ–±–æ—á–∫–∏ üî¥–ù–ï–ù–ê–î–ê)\n"
                         f"–ü—Ä–∏–º–µ—Ä:</b>",
                         reply_markup=menu_beck)

    await message.answer(f"79493158791")
    await state.set_state('createsession')

@dp.message_handler(state='createsession')
async def add_channel_get_photo(message, state: FSMContext):
    nomber = message.text
    api_hash = f'114f5f726cd5540966760aa9267bf99b'

    client = TelegramClient(rf'data/new.session', 1871428, api_hash)
    await client.connect()
    await state.update_data(nomber=nomber)
    if not await client.is_user_authorized():
        await client.send_code_request(nomber)

        await state.set_state('createsession_2')
        await message.answer(f"‚ö°Ô∏è–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤–∞—à –∫–æ–¥")




@dp.message_handler(state='createsession_2')
async def code_callback(message, state: FSMContext):
    api_hash = f'114f5f726cd5540966760aa9267bf99b'
    client = TelegramClient(rf'data/new.session', 1871428, api_hash)
    await client.connect()
    nom = await state.get_data()
    nomber = nom['nomber']
    if not await client.is_user_authorized():
        await client.sign_in(nomber, message.text)
    await state.finish()
    await client.disconnect()
    await bot.send_document(message.from_user.id, InputFile(rf"data/new.session", filename=f'start.session'))

    os.remove(rf"data/new.session")
    await message.answer(f"‚ö°Ô∏è–°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞")





@dp.message_handler(text='‚ö™Ô∏èSession', state='*')
async def start(message: types.Message, state: FSMContext):
    await message.answer(f"‚ö°Ô∏è–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–∞–π–ª –≤–∞—à–µ–π <code>.session</code>, –æ–¥–Ω–∏–º —Ñ–∞–π–ª–æ–º –∫–∞–∫ <b>–ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –ø—Ä–∏–º–µ—Ä –Ω–∏–∂–µ.</b>",
                         reply_markup=menu_beck)

    await bot.send_document(message.from_user.id, InputFile(rf"data/start.session", filename=f'start.session'))

    await state.set_state('newsession')

@dp.message_handler(text='‚ö´Ô∏èProxy', state='*')
async def start(message: types.Message, state: FSMContext):
    await message.answer(f"‚ö°Ô∏è–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–∞–π–ª –≤–∞—à–µ–π <code>proxy.txt</code>, –æ–¥–Ω–∏–º —Ñ–∞–π–ª–æ–º –∫–∞–∫ <b>–ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –ø—Ä–∏–º–µ—Ä –Ω–∏–∂–µ.</b>",
                         reply_markup=menu_beck)

    await bot.send_document(message.from_user.id, InputFile(rf"telegramusers/proxy.txt", filename=f'proxy.txt'))

    await state.set_state('newproxy')


@dp.message_handler(text='üîµAccounts', state='*')
async def start(message: types.Message, state: FSMContext):
    await message.answer(f"‚ö°Ô∏è–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–∞–π–ª <code>.zip</code>, –æ–¥–Ω–∏–º —Ñ–∞–π–ª–æ–º –∫–∞–∫ <b>–ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –ø—Ä–∏–º–µ—Ä –Ω–∏–∂–µ.</b>",
                         reply_markup=menu_beck)

    await bot.send_document(message.from_user.id, InputFile(rf"telegramusers/test.zip", filename=f'test.zip'))

    await state.set_state('newzip')





@dp.message_handler(state='newzip',content_types=['document'])
async def add_channel_get_photo(message, state: FSMContext):
    name_of_file = f'zip_{message.from_user.id}.zip'
    await message.document.download(name_of_file)
    session_path = f'telegramusers'
    file = zipfile.ZipFile(name_of_file)
    file.extractall(session_path)
    file.close()
    os.remove(name_of_file)
    sessions = os.listdir(session_path)

    await message.answer(f"üî•–û—Ç–ª–∏—á–Ω–æ, –º—ã –ø–æ–ª—É—á–∏–ª–∏ .session –≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ - <code>{len(sessions) - 2}</code>", reply_markup=menu_start_data)

    await state.finish()

@dp.message_handler(state='newproxy',content_types=['document'])
async def add_channel_get_photo(message, state: FSMContext):
    destination = rf"telegramusers/proxy.txt"
    await message.document.download(destination)

    await message.answer(f"üî•–û—Ç–ª–∏—á–Ω–æ, –º—ã –ø–æ–ª—É—á–∏–ª–∏ —Ñ–∞–π–ª <code>proxy.txt</code>", reply_markup=menu_start_data)

    await state.finish()

@dp.message_handler(state='newsession',content_types=['document'])
async def add_channel_get_photo(message, state: FSMContext):
    destination = rf"data/start.session"
    await message.document.download(destination)

    await message.answer(f"üî•–û—Ç–ª–∏—á–Ω–æ, –º—ã –ø–æ–ª—É—á–∏–ª–∏ —Ñ–∞–π–ª <code>.session</code>", reply_markup=menu_start_data)

    await state.finish()

